stages:
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

  SPECIFIC_PLOT:
    value: "none"
    options:
      - "none"
      - "upper_limits"
      - "multiple_upper_limits"
      - "multiple_upper_limits_by_model"
      - "upper_limits_at_point"
      - "likelihood_scan"
      - "likelihood_scan_2d"
      - "multiple_likelihood_scans"
      - "multiple_likelihood_scans_2d"
      - "multiple_likelihood_scans_by_model"
      - "multiple_likelihood_scans_by_model_2d"
      - "significance_scan"
      - "multiple_significance_scans"
      - "pulls_and_impacts"
      - "exclusion_and_bestfit"
      - "exclusion_and_bestfit_2d"
      - "postfit_s_over_b"
      - "nuisance_likelihood_scans"
      - "goodness_of_fit"
      - "eft_benchmark_limits"
      - "multiple_eft_benchmark_limits"
      - "upper_limits_c2"
      - "likelihood_scan_c2_2d"
      - "multiple_goodness_of_fits"
      - "morphing_scales"
      - "morphed_discriminant"
      - "stat_error_scan"
      - "limits"
      - "likelihoods"
      - "significances"
      - "pulls"
      - "exclusions"
      - "postfit"
      - "gof"
      - "eft_bm"
      - "eft_c2"
      - "studies"
    description: "A specific plot to produce (see test.TestPlots for more info)."

lint:
  stage: build
  when: always
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
  tags:
    - cvmfs
  script:
    - export DHI_COMBINE_PYTHON_ONLY="1"
    - source setup.sh
    - ./lint.sh
  cache:
    key: "lint__${CI_COMMIT_REF_SLUG}"
    policy: pull-push
    paths:
      - data/

compile:
  stage: build
  when: manual
  tags:
    - cvmfs
  script:
    - yum install -y sshpass
    - mkdir -p data/examplecards
    - cd data/examplecards
    - sshpass -v -p ${KRB_PASS} scp -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch:/afs/cern.ch/user/m/mrieger/public/hh/inference/examplecards/v2.tgz cards.tgz
    - tar -xzf cards.tgz
    - cd ../..
    - export DHI_EXAMPLE_CARDS_BASE="${PWD}/data/examplecards"
    - source setup.sh
  cache:
    key: "test__${CI_COMMIT_REF_SLUG}"
    policy: push
    paths:
      - data/

.test:
  stage: build
  tags:
    - cvmfs
  script:
    - export DHI_EXAMPLE_CARDS_BASE="${PWD}/data/examplecards"
    - source setup.sh
    - export test_cmd="law run test.TestPlots --version ci --plots ${PLOTS} --campaign \"CI ${CI_COMMIT_SHORT_SHA}\" --file-types png,pdf"
    - echo "running command '${test_cmd}'"
    - eval "${test_cmd}"
    - eval "${test_cmd} --fetch-output 0,a,plots"
    - mkdir png
    - mkdir pdf
    - mv plots/*.png png
    - mv plots/*.pdf pdf
  cache:
    key: "test__${CI_COMMIT_REF_SLUG}"
    policy: pull
    paths:
      - data/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - png/*.png
      - pdf/*.pdf
    expire_in: 1 month

test_all:
  extends: .test
  when: manual
  rules:
    - if: $SPECIFIC_PLOT != "none"
      when: never
  parallel:
    matrix:
      - PLOTS:
        - "limits"
        - "likelihoods"
        - "significances"
        - "pulls"
        - "exclusions"
        - "postfit"
        - "gof"
        - "eft_bm"
        - "eft_c2"
        - "studies"

test_specific:
  extends: .test
  when: manual
  rules:
    - if: $SPECIFIC_PLOT == "none"
      when: never
  variables:
    PLOTS: $SPECIFIC_PLOT

build_docs_image:
  stage: build
  when: manual
  tags:
    - docker-image-build
  script: "echo Building image ${CI_REGISTRY_IMAGE}"
  variables:
    CONTEXT_DIR: "docs/docker"
    TO: "${CI_REGISTRY_IMAGE}:latest"
    NO_CACHE: "true"

deploy_docs:
  stage: build
  when: manual
  tags:
    - docker
  image: ${CI_REGISTRY_IMAGE}:latest
  environment:
    name: inference-${CI_COMMIT_REF_SLUG}
    url: ${PAGE_URL}${CI_ENVIRONMENT_SLUG}
    on_stop: delete_docs
  script:
    - test ! -z "${PAGE_ROOT}"
    - export FULL_PAGE_ROOT="${PAGE_ROOT}${CI_ENVIRONMENT_SLUG}"
    - echo "FULL_PAGE_ROOT is ${FULL_PAGE_ROOT}"
    - cd docs
    - mkdocs build
    - cd site
    - tar -czf site.tgz *
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "[ ! -d ${FULL_PAGE_ROOT} ] && mkdir ${FULL_PAGE_ROOT} || rm -rf ${FULL_PAGE_ROOT}/*"
    - sshpass -v -p ${KRB_PASS} scp -o "StrictHostKeyChecking=no" site.tgz ${KRB_USER}@lxplus.cern.ch:${FULL_PAGE_ROOT}/site.tgz
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "cd ${FULL_PAGE_ROOT}; tar -xzf site.tgz; rm site.tgz"

delete_docs:
  stage: build
  when: manual
  tags:
    - docker
  image: ${CI_REGISTRY_IMAGE}:latest
  environment:
    name: inference-${CI_COMMIT_REF_SLUG}
    action: stop
  script:
    - test ! -z "${PAGE_ROOT}"
    - export FULL_PAGE_ROOT="${PAGE_ROOT}${CI_ENVIRONMENT_SLUG}"
    - echo "FULL_PAGE_ROOT is ${FULL_PAGE_ROOT}"
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "rm -rf ${FULL_PAGE_ROOT}"
